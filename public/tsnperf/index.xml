<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ZIGGO TSNPerf | Creator&#39;s Landing Page | Hugo Theme</title>
    <link>http://localhost:1313/tsnperf/</link>
      <atom:link href="http://localhost:1313/tsnperf/index.xml" rel="self" type="application/rss+xml" />
    <description>ZIGGO TSNPerf</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Wed, 01 May 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://localhost:1313/media/logo.svg</url>
      <title>ZIGGO TSNPerf</title>
      <link>http://localhost:1313/tsnperf/</link>
    </image>
    
    <item>
      <title>⌚ TSNPerf 检测内容及使用表</title>
      <link>http://localhost:1313/tsnperf/manual/</link>
      <pubDate>Wed, 01 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tsnperf/manual/</guid>
      <description>&lt;h2 id=&#34;时间同步测试&#34;&gt;时间同步测试&lt;/h2&gt;
&lt;p&gt;本节将介绍使用TSNPerf测试待测设备时间同步功能的方法。&lt;/p&gt;
&lt;p&gt;TBD&lt;/p&gt;
&lt;h2 id=&#34;流量整形测试&#34;&gt;流量整形测试&lt;/h2&gt;
&lt;p&gt;本节将介绍使用TSNPerf测试待测设备流量整形功能的方法。本章节中的测试参数均为参考配置，使用者可根据实际需求修改参数。&lt;/p&gt;
&lt;h3 id=&#34;基准测试&#34;&gt;基准测试&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;目的：&lt;strong&gt;测试&lt;/strong&gt;无&lt;/strong&gt;背景流量情况下，高优先级流量经过一跳交换机（待测设备）的端到端延迟、抖动和丢包率。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方案：&lt;/strong&gt;
使用如下拓扑，按照配置文档中的介绍发送关键数据包，记录关键数据包的端到端时延、抖动和丢包率。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./qbv-basictest.png&#34; alt=&#34;alt text&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;下面给出TSNPerf程序的参考参数配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mode:                   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tx-mode:                &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;verbose:                &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;use-ziggo-analysis:     &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pcap-filename:          &lt;span class=&#34;s2&#34;&gt;&amp;#34;/home/i210/launchtimedemo/captured_10w_1500Byte.pcap&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;interface:              &lt;span class=&#34;s2&#34;&gt;&amp;#34;enp1s0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;smac:                   &lt;span class=&#34;s2&#34;&gt;&amp;#34;00:1b:21:77:ac:ae&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dmac:                   &lt;span class=&#34;s2&#34;&gt;&amp;#34;00:1b:21:76:ae:75&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ethertype:              0xb62c
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;socket-priority:        &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vlan-priority:          &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;offset:                 &lt;span class=&#34;m&#34;&gt;150000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;early-offset:           &lt;span class=&#34;m&#34;&gt;300000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;use-launchtime:         &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;basetime:               1684559640000000100L
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;packet-size:            &lt;span class=&#34;m&#34;&gt;1500&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;packets-to-send:        &lt;span class=&#34;m&#34;&gt;10000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;interval:               &lt;span class=&#34;m&#34;&gt;1000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;use-udp:                &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sip:                    &lt;span class=&#34;s2&#34;&gt;&amp;#34;192.168.16.10&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dip:                    &lt;span class=&#34;s2&#34;&gt;&amp;#34;192.168.16.11&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sport:                  &lt;span class=&#34;m&#34;&gt;10000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dport:                  &lt;span class=&#34;m&#34;&gt;10000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;每一个关键数据包中，从第26个字节开始的8个字节是数据包的发送时间戳，用tcpdump抓取对应的接收时间戳，进而求得每个数据包的端到端时延。统计发送出的10000个数据包，可以得到平均时延和抖动（方差/标准差），以及丢包率。&lt;/p&gt;
&lt;h3 id=&#34;门控能力&#34;&gt;门控能力&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;目的：&lt;/strong&gt; 测试&lt;strong&gt;有&lt;/strong&gt;背景流量情况下，高优先级流量经过一跳交换机（待测设备）的端到端延迟、抖动和丢包率。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方案：&lt;/strong&gt; 使用如下拓扑进行测试。从Injector向Recorder发送背景流量，打满网络带宽，同时从Publisher向Recorder发送关键流量，记录关键数据包的端到端时延、抖动和丢包率。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./qbv-withbackground.png&#34; alt=&#34;alt text&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;TSNPerf程序的配置参数可参考上一小节。如果待测设备功能正常，则测试结果应与&lt;strong&gt;基准测试&lt;/strong&gt;中得到的结果一致。&lt;/p&gt;
&lt;h3 id=&#34;门控精度&#34;&gt;门控精度&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;目的：&lt;/strong&gt; 测试交换机门控的精度，即能否通过预期数量和大小的以太网帧&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方案：&lt;/strong&gt; 每个周期预留16384ns的门控给关键流量，理论上每个周期可以通过2个1500Byte的以太网帧。&lt;/p&gt;
&lt;p&gt;下面给出TSNPerf程序的参考参数配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mode:                   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tx-mode:                &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;verbose:                &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;use-ziggo-analysis:     &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pcap-filename:          &lt;span class=&#34;s2&#34;&gt;&amp;#34;/home/i210/launchtimedemo/captured_10w_1500Byte.pcap&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;interface:              &lt;span class=&#34;s2&#34;&gt;&amp;#34;enp1s0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;smac:                   &lt;span class=&#34;s2&#34;&gt;&amp;#34;00:1b:21:77:ac:ae&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dmac:                   &lt;span class=&#34;s2&#34;&gt;&amp;#34;00:1b:21:76:ae:75&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ethertype:              0xb62c
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;socket-priority:        &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vlan-priority:          &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;offset:                 &lt;span class=&#34;m&#34;&gt;150000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;early-offset:           &lt;span class=&#34;m&#34;&gt;300000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;use-launchtime:         &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;basetime:               1684559640000000100L
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;packet-size:            &lt;span class=&#34;m&#34;&gt;1500&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;packets-to-send:        &lt;span class=&#34;m&#34;&gt;100000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;interval:               &lt;span class=&#34;m&#34;&gt;1000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;use-udp:                &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sip:                    &lt;span class=&#34;s2&#34;&gt;&amp;#34;192.168.16.10&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dip:                    &lt;span class=&#34;s2&#34;&gt;&amp;#34;192.168.16.11&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sport:                  &lt;span class=&#34;m&#34;&gt;10000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dport:                  &lt;span class=&#34;m&#34;&gt;10000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Publisher向Recorder打满关键流量，Recorder处统计接收到的关键数据包的时间戳。预期每个周期（1毫秒）可以接收到两个关键数据包。&lt;/p&gt;
&lt;h3 id=&#34;带宽保障&#34;&gt;带宽保障&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;目的：&lt;/strong&gt; 测试待测交换机是否可以为关键流量预留固定的带宽&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方案：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;配置待测交换机的门控，为关键数据预留25%、50%、75%的带宽。&lt;/li&gt;
&lt;li&gt;从Injector处向Recorder打满背景流量。&lt;/li&gt;
&lt;li&gt;用TSNPerf，从Publisher向Recorder发送关键流量，配置参数可参考上一小节。&lt;/li&gt;
&lt;li&gt;Recorder处用tcpdump/wireshark记录带宽使用情况。以千兆带宽为例，预期关键数据会分别占用 250Mbps、500Mbps、750Mbps 的带宽。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;视频流量测试&#34;&gt;视频流量测试&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;目的：&lt;/strong&gt; 测试以太网帧大小不同的视频流量经过一跳交换机的端延迟、抖动和丢包率&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方案：&lt;/strong&gt; 测试拓扑参考&lt;strong&gt;基准测试&lt;/strong&gt;章节。准备好一个视频流量的pcap文件&lt;code&gt;H264.pcap&lt;/code&gt;，TSNPerf程序的参数配置如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mode:                   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tx-mode:                &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;verbose:                &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;use-ziggo-analysis:     &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pcap-filename:          &lt;span class=&#34;s2&#34;&gt;&amp;#34;/home/i210/launchtimedemo/H264.pcap&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;interface:              &lt;span class=&#34;s2&#34;&gt;&amp;#34;enp1s0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;smac:                   &lt;span class=&#34;s2&#34;&gt;&amp;#34;00:1b:21:77:ac:ae&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dmac:                   &lt;span class=&#34;s2&#34;&gt;&amp;#34;00:1b:21:76:ae:75&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ethertype:              0xb62c
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;socket-priority:        &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vlan-priority:          &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;offset:                 &lt;span class=&#34;m&#34;&gt;150000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;early-offset:           &lt;span class=&#34;m&#34;&gt;300000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;use-launchtime:         &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;basetime:               1684559640000000100L
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;packet-size:            &lt;span class=&#34;m&#34;&gt;1500&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;packets-to-send:        &lt;span class=&#34;m&#34;&gt;10000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;interval:               &lt;span class=&#34;m&#34;&gt;1000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;use-udp:                &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sip:                    &lt;span class=&#34;s2&#34;&gt;&amp;#34;192.168.16.10&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dip:                    &lt;span class=&#34;s2&#34;&gt;&amp;#34;192.168.16.11&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sport:                  &lt;span class=&#34;m&#34;&gt;10000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dport:                  &lt;span class=&#34;m&#34;&gt;10000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果待测交换机是存储转发（store-and-forward）模式的，则预期每个数据包的端到端时延会因包的大小而有所不同。如果待测交换机是直通转发（cut-through）模式的，则预期数据包的端到端时延抖动是很小的。&lt;/p&gt;
&lt;h2 id=&#34;网络配置测试&#34;&gt;网络配置测试&lt;/h2&gt;
&lt;p&gt;本节将介绍使用TSNPerf测试待测设备网络配置功能的方法。&lt;/p&gt;
&lt;p&gt;TBD&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>☀ 某品牌交换机报告</title>
      <link>http://localhost:1313/tsnperf/report/</link>
      <pubDate>Wed, 01 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tsnperf/report/</guid>
      <description>&lt;p&gt;详细报告请查看&lt;a href=&#34;http://localhost:1313/tsnperf/report/switch_report.pdf&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>📈 TSNPerf 使用指南</title>
      <link>http://localhost:1313/tsnperf/configuration/</link>
      <pubDate>Wed, 01 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tsnperf/configuration/</guid>
      <description>&lt;h2 id=&#34;硬件准备&#34;&gt;硬件准备&lt;/h2&gt;
&lt;p&gt;准备两台机器，一台作为发送方Publisher，一台作为接收方Recorder，每一台上的硬件需满足以下条件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Intel 八代及以上的处理器&lt;/li&gt;
&lt;li&gt;Intel I210 / I225-LM / I225-LM 网卡&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：Publisher上需要安装两个网卡，一个负责时间同步，一个负责发送数据包。Recorder上只要安装一个网卡，该网卡同时负责时间同步和数据接收。&lt;/p&gt;
&lt;h2 id=&#34;系统准备&#34;&gt;系统准备&lt;/h2&gt;
&lt;p&gt;在发送发和接收方的机器上，安装以下系统与软件依赖&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装 Ubuntu 22.04&lt;/li&gt;
&lt;li&gt;安装 Intel ECI &lt;a href=&#34;https://eci.intel.com/docs/3.1/getstarted/requirements.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://eci.intel.com/docs/3.1/getstarted/requirements.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;安装linuxPTP，参考下一章节&lt;/li&gt;
&lt;li&gt;安装依赖&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install libconfig-dev libpcap-dev
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在进行实验前，请将待测设备与Publisher、Recorder按照合适的方式连接，并开机启动。&lt;/p&gt;
&lt;h2 id=&#34;启用时间同步&#34;&gt;启用时间同步&lt;/h2&gt;
&lt;h3 id=&#34;安装linuxptp&#34;&gt;安装linuxPTP&lt;/h3&gt;
&lt;h4 id=&#34;1-安装网卡驱动&#34;&gt;1. 安装网卡驱动&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.intel.com/content/www/us/en/download/14098/intel-network-adapter-driver-for-82575-6-82580-i350-and-i210-211-based-gigabit-network-connections-for-linux.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;下载&lt;/a&gt;驱动，参照压缩包中 README 的教程编译安装驱动。&lt;/p&gt;
&lt;p&gt;使用下面的命令检查安装（enp3s0为网卡名）。如安装成功，应有下图红框中的输出（表示网卡具有硬件时间戳功能）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ethtool -T enp3s0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;















&lt;figure  id=&#34;figure-linuxptp安装检查&#34;&gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./configuration_linuxptp_check.jpg&#34; alt=&#34;linuxPTP安装检查&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      linuxPTP安装检查
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;2-安装linuxptp&#34;&gt;2. 安装linuxPTP&lt;/h4&gt;
&lt;p&gt;按照以下命令安装linuxPTP&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone http://git.code.sf.net/p/linuxptp/code linuxptp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; linuxptp/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo make install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;同步publisher与recorder的网卡时钟&#34;&gt;同步Publisher与Recorder的网卡时钟&lt;/h3&gt;
&lt;p&gt;用以下命令启动Publisher和Recorder的时间同步网卡。&lt;code&gt;enp3s0&lt;/code&gt;为网卡名，&lt;code&gt;&amp;lt;configuration&amp;gt;.cfg&lt;/code&gt;为配置文件，可参考&lt;code&gt;linuxptp/configs/&lt;/code&gt;中的文件，并结合需求写该配置。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ptp4l -i enp3s0 -f &amp;lt;configuration&amp;gt;.cfg -m -l &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt; --socket_priority &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：如有需要，请同时启动待测设备的时间同步功能&lt;/p&gt;
&lt;h3 id=&#34;同步网卡时钟与系统时钟&#34;&gt;同步网卡时钟与系统时钟&lt;/h3&gt;
&lt;p&gt;Publisher和Recorder的两张网卡同步完成后，再将网卡时钟与系统时钟同步上。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo phc2sys -c CLOCK_REALTIME -s enp3s0 -O -0 -m -l &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;由于Publisher上时间同步与数据包发送使用了不同的网卡，请将发送数据包的网卡上的时钟也与系统同步上&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo phc2sys -s CLOCK_REALTIME -c enp1s0 -O -0 -m -l &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;优化网络栈&#34;&gt;优化网络栈&lt;/h2&gt;
&lt;h3 id=&#34;将关键流量绑定到-queue-0&#34;&gt;将关键流量绑定到 Queue 0&lt;/h3&gt;
&lt;p&gt;在Publisher和Recorder上执行以下命令，将关键流量绑定到 Queue 0 上。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ethtool --config-ntuple enp1s0 delete &lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ethtool --config-ntuple enp1s0 flow-type ether proto 0xb62c loc &lt;span class=&#34;m&#34;&gt;15&lt;/span&gt; action &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ethtool -X enp1s0 equal &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;enp1s0&lt;/code&gt;代表Publisher上负责发送数据包的网卡，或者Recorder上的网卡。&lt;/li&gt;
&lt;li&gt;第2行命令中的&lt;code&gt;0xb62c&lt;/code&gt;代表关键流量的类型，请保持该值与下一章节中&lt;code&gt;ethertype&lt;/code&gt;一致。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;绑定-queue-0-中断到隔离核心并设置优先级&#34;&gt;绑定 Queue 0 中断到隔离核心，并设置优先级&lt;/h3&gt;
&lt;p&gt;在Publisher和Recorder上执行以下命令。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;绑定到隔离核心&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat /proc/interrupts &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep TxRx-0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;















&lt;figure  id=&#34;figure-中断绑定隔离核心&#34;&gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./configuration_stack_irqaffi.jpg&#34; alt=&#34;中断绑定隔离核心&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      中断绑定隔离核心
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo sh -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;echo 2 &amp;gt; /proc/irq/131/smp_affinity&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;设置优先级&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ps -ae &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;m&#34;&gt;131&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;















&lt;figure  id=&#34;figure-中断设置优先级&#34;&gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./configuration_stack_irpri.jpg&#34; alt=&#34;中断设置优先级&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      中断设置优先级
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo chrt -fp &lt;span class=&#34;m&#34;&gt;95&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;开启-launchtime-功能&#34;&gt;开启 LaunchTime 功能&lt;/h3&gt;
&lt;p&gt;在Publisher上开启 LaunchTime 功能&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo tc qdisc add dev enp1s0 handle 8001: parent root mqprio num_tc &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; map &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; queues 1@0 1@1 1@2 1@3 hw &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo tc qdisc replace dev enp1s0 parent 8001:1 etf offload clockid CLOCK_TAI delta &lt;span class=&#34;m&#34;&gt;500000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;修改配置文件&#34;&gt;修改配置文件&lt;/h2&gt;
&lt;p&gt;根据测试需求，修改配置文件，以下是一个示例配置 default.ini&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mode:                   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tx-mode:                &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;verbose:                &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;use-ziggo-analysis:     &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pcap-filename:          &lt;span class=&#34;s2&#34;&gt;&amp;#34;/home/i210/launchtimedemo/captured_10w_1500Byte.pcap&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;interface:              &lt;span class=&#34;s2&#34;&gt;&amp;#34;enp1s0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;smac:                   &lt;span class=&#34;s2&#34;&gt;&amp;#34;00:1b:21:77:ac:ae&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dmac:                   &lt;span class=&#34;s2&#34;&gt;&amp;#34;00:1b:21:76:ae:75&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ethertype:              0xb62c
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;socket-priority:        &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vlan-priority:          &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;offset:                 &lt;span class=&#34;m&#34;&gt;150000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;early-offset:           &lt;span class=&#34;m&#34;&gt;300000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;use-launchtime:         &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;basetime:               1684559640000000100L
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;packet-size:            &lt;span class=&#34;m&#34;&gt;1500&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;packets-to-send:        &lt;span class=&#34;m&#34;&gt;100000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;interval:               &lt;span class=&#34;m&#34;&gt;1000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;use-udp:                &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sip:                    &lt;span class=&#34;s2&#34;&gt;&amp;#34;192.168.16.10&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dip:                    &lt;span class=&#34;s2&#34;&gt;&amp;#34;192.168.16.11&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sport:                  &lt;span class=&#34;m&#34;&gt;10000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dport:                  &lt;span class=&#34;m&#34;&gt;10000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面是每个配置参数的含义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mode：运行模式，INT类型。0 表示发送，1 表示接收。目前仅支持发送功能。&lt;/li&gt;
&lt;li&gt;tx-mode：发送模式，INT类型。0 表示 完全按照pcap文件中的时间戳，重放数据包；1 表示 按顺序每周期发送一个pcap文件中的数据包；2 表示 每个周期发送一个构造的数据包； 3 表示 全力向网络中发送数据包（用于带宽保证测试）。&lt;/li&gt;
&lt;li&gt;verbose：是否输出额外的信息，BOOL类型。主要包括每发出一个数据包的 序号 和 tx 时间戳。&lt;/li&gt;
&lt;li&gt;use-ziggo-analysis：是否使用ZIGGO测试模式，BOOL类型。使用 ZIGGO 测试，会将 tx 时间戳 打印在ethernet数据包的第20个字节开始（从0编号）的8个字节；否则会使用 Intel 测试模式，会将 tx 时间戳 打印在第26个字节开始的8个字节；&lt;/li&gt;
&lt;li&gt;pcap-filename：需要重放的 pcap 文件，STRING类型。当tx-mode=0/1时有效。&lt;/li&gt;
&lt;li&gt;interface：网口名字，STRING类型。&lt;/li&gt;
&lt;li&gt;smac，dmac：源/目的mac地址，STRING类型。&lt;/li&gt;
&lt;li&gt;ethertype：数据包类型，INT类型。当tx-mode=2/3时有效。&lt;/li&gt;
&lt;li&gt;socket-priority, vlan-priority：数据包类型，INT类型。vlan相关参数，默认值为0。当tx-mode=2/3时有效。&lt;/li&gt;
&lt;li&gt;offset：提前调用send的时长，单位ns，INT类型。当use-launchtime为true时有效。&lt;/li&gt;
&lt;li&gt;early-offset：给网络栈处理预留的时长，单位ns，INT类型。当use-launchtime为true时有效。&lt;/li&gt;
&lt;li&gt;use-launchtime：是否使用 launchtime，BOOL类型。只有当使用 launchtime 时，数据包的tx时间戳精度才是亚微秒级别。&lt;strong&gt;注意&lt;/strong&gt;：目前，当且仅当仅支持tx-mode=2时，可将use-launchtime设置为false。&lt;/li&gt;
&lt;li&gt;basetime：INT64类型。整个网络设备共享的基准时间，用于调整数据包的发送时间，与交换机的门控配合。&lt;/li&gt;
&lt;li&gt;packet-size：数据包大小，INT类型。单位Byte。当tx-mode=2/3时有效。&lt;/li&gt;
&lt;li&gt;packets-to-send：发送数据包的数量，INT类型。&lt;/li&gt;
&lt;li&gt;interval：一个周期的时长，INT类型。单位ns。当tx-mode=1/2时有效。&lt;/li&gt;
&lt;li&gt;use-udp：是否使用udp填充以太网报文，BOOL类型。&lt;strong&gt;注意&lt;/strong&gt;：目前，当且仅当仅支持tx-mode=2/3时，可将use-udp设置为true。&lt;/li&gt;
&lt;li&gt;sip：原ip地址，STRING类型。注意ip地址是字符串，需要加上引号。&lt;/li&gt;
&lt;li&gt;dip：目的ip地址，STRING类型。注意ip地址是字符串，需要加上引号。&lt;/li&gt;
&lt;li&gt;sport：原端口号，INT类型。&lt;/li&gt;
&lt;li&gt;dport：目的端口号，INT类型。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;在publisher启动接收程序&#34;&gt;在Publisher启动接收程序&lt;/h2&gt;
&lt;p&gt;接收程序可以使用 Intel 的 &lt;a href=&#34;https://github.com/intel/iotg_tsn_ref_sw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;txrx-tsn&lt;/a&gt; 中的接收模式，配合 use-ziggo-analysis = false，其打出来的 log 可以直接拿到数据包的发送时间戳和接收时间戳。
但是实验中发现，该程序与iperf打背景流量冲突，可以考虑用tcpdump抓包，并保存高精度的 rx 时间戳，tx时间戳可以从发送端的程序输出获得，从而进行分析。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo tcpdump -i &amp;lt;网口&amp;gt; ether proto 0xb62c -j adapter_unsynced --time-stamp-precision&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;nano -s &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; -tttt -w &amp;lt;存储的pcap文件&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;在recorder启动发送程序&#34;&gt;在Recorder启动发送程序&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /path/to/launchtimedemo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo taskset -c &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; chrt -f &lt;span class=&#34;m&#34;&gt;92&lt;/span&gt; ./pcap_replay -c ~/launchtimedemo/config.ini
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>📈 TSNPerf 设计原理</title>
      <link>http://localhost:1313/tsnperf/principle/</link>
      <pubDate>Wed, 01 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tsnperf/principle/</guid>
      <description>&lt;h2 id=&#34;现有方案的局限&#34;&gt;现有方案的局限&lt;/h2&gt;
&lt;p&gt;TSNPerf是一款专为时间敏感网络（Time-Sensitive Networking, TSN）设计的性能评测工具。它提供了全面的TSN网络性能评测功能，能够帮助网络工程师和研究人员深入了解并验证TSN网络设备的性能特征。为此，TSNPerf需要能够精准地向网络中发送关键数据包，以测试设备的时间同步性能和流量整形能力。然而，Linux操作系统提供的&lt;code&gt;send()&lt;/code&gt;函数只能达到微秒级的发包精度，难以满足TSNPerf对高精度发包的要求。&lt;/p&gt;
&lt;p&gt;为了直观地展示&lt;code&gt;send()&lt;/code&gt;函数的发包精度限制，我们进行了一项测试。在测试中，我们使用&lt;code&gt;send()&lt;/code&gt;函数以1毫秒为设定间隔，连续发送了10000个数据包。然后，我们记录了每两个相邻数据包之间的实际时间间隔，并计算了它们与预期的1毫秒间隔之间的误差。结果显示，即使没有任何背景进程/流量的干扰，相邻数据包的间隔任然达到了&lt;em&gt;&lt;strong&gt;最高14微秒&lt;/strong&gt;&lt;/em&gt;左右。接下来我们分析该现象的原因。&lt;/p&gt;
&lt;p&gt;如下图所示，在 $t_0$ 时刻，程序调用 &lt;code&gt;send()&lt;/code&gt; 函数向网络发送数据包，但实际上，数据包在 $t_1$ 时刻才会被发送到网络中去。这是因为，操作系统的网络协议栈需要花费一定的时间处理该数据包。我们将 $t_1-t_0$ 称之为网络栈的处理时延，这个时延通常在微秒级别。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-linux网络栈处理时延&#34;&gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./principle_basic.png&#34; alt=&#34;Linux网络栈处理时延&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Linux网络栈处理时延
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;
&lt;p&gt;Intel 的 I210 / I225 / I226 网卡，提供了 LaunchTime 功能，可以精准地控制数据包离开网口的时间（理论精度在 32 纳秒级别）。&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-launchtime原理&#34;&gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./principle_advanced.png&#34; alt=&#34;LaunchTime原理&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      LaunchTime原理
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;利用 LaunchTime，可以提高数据包的发送精度。如上图所示，对于一个需要在 $t_0$ 时刻发出的数据包，我们预留一段时间给网络栈的处理流程，提前在 $t_2$ 时刻就调用 &lt;code&gt;send()&lt;/code&gt; 函数，保证数据包在 $t_0$ 前就在网卡的出队列口等待，LaunchTime 会在$t_0$时刻打开出队列的门，将数据包发出。&lt;/p&gt;
&lt;h2 id=&#34;性能验证&#34;&gt;性能验证&lt;/h2&gt;
&lt;p&gt;类似地，我们开启 LaunchTime 功能，以1毫秒为设定间隔连续发送10000个数据包，记录每两个相邻数据包之间的实际时间间隔与1毫秒之间的误差。
结果如下图所示，所有数据包的发送时间误差不超过100纳秒，达到了TSNPerf对发包精度的要求&lt;/p&gt;
&lt;p&gt;















&lt;figure  id=&#34;figure-launchtime实验结果&#34;&gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./principle_advanced_performance.png&#34; alt=&#34;LaunchTime实验结果&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      LaunchTime实验结果
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
